apply plugin: 'com.android.application'

//def SERVICE_URL_DEBUG = "\"http://192.168.0.3:8080/qrcodetracker/\""  //青岛办电脑ip
//def SERVICE_URL_PRERELEASE = "\"http://192.168.0.3:8080/qrcodetracker/\""  //青岛办电脑ip
//def SERVICE_URL_RELEASE = "\"http://192.168.0.3:8080/qrcodetracker/\""  //青岛办电脑ip

//def SERVICE_URL_DEBUG = "\"http://120.27.5.36:8080/QrcodeTrackerWeb/\""  //远程电脑ip
//def SERVICE_URL_PRERELEASE = "\"http://120.27.5.36:8080/QrcodeTrackerWeb/\""  //远程电脑ip
//def SERVICE_URL_RELEASE = "\"http://120.27.5.36:8080/QrcodeTrackerWeb/\""  //远程电脑ip

def SERVICE_URL_DEBUG = "\"http://192.168.0.15:8080/qrcodetracker/\""  //马鹏昊电脑ip
def SERVICE_URL_PRERELEASE = "\"http://192.168.0.15:8080/qrcodetracker/\""  //马鹏昊电脑ip
def SERVICE_URL_RELEASE = "\"http://192.168.0.15:8080/qrcodetracker/\""  //马鹏昊电脑ip


def RESOURCE_URL_DEBUG = "\"http://192.168.0.6:8080/qrcodetracker/upload\""
def RESOURCE_URL_PRERELEASE = "\"http://dev.cloudcns.com/lottery-resource/upload\""
def RESOURCE_URL_RELEASE = "\"http://dev.cloudcns.com/lottery-resource/upload\""
def APP_NAME = "二维码追溯"
def APP_ID = "101100"
def VERSION_CODE = 2
def VERSION_NAME = "1.0.1"
def VERSION_TEXT = "测试一下好不好用"
def VERSION_KEY = "1"

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.hualing.qrcodetracker"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "7ad8a616c3bab203cd84720f", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

    }

//    signingConfigs {
//        key {
//            keyAlias 'lottery'
//            keyPassword 'com.cloudcns.lottery'
//            storeFile file('D:/ZgsProject/lottery/document/key/android/lottery.keystore')
//            storePassword 'com.cloudcns'
//        }
//    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "APP_ID", "\"" + APP_ID + "\""
            buildConfigField "String", "APP_NAME", "\"" + APP_NAME + "\""
            buildConfigField "boolean", "API_DEBUG", "true"
            buildConfigField "String", "SERVICE_URL", SERVICE_URL_DEBUG
            buildConfigField "String", "RESOURCE_URL", RESOURCE_URL_DEBUG
            manifestPlaceholders = [APP_LABEL: APP_NAME + "开发"]
//            signingConfig  signingConfigs.key
        }
        prerelease {
            buildConfigField "String", "APP_ID", "\"" + APP_ID + "\""
            buildConfigField "String", "APP_NAME", "\"" + APP_NAME + "\""
            buildConfigField "boolean", "API_DEBUG", "true"
            buildConfigField "String", "SERVICE_URL", SERVICE_URL_PRERELEASE
            buildConfigField "String", "RESOURCE_URL", RESOURCE_URL_PRERELEASE
            minifyEnabled false
            manifestPlaceholders = [APP_LABEL: APP_NAME + "测试"]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig  signingConfigs.key
        }
        release {
            buildConfigField "String", "APP_ID", "\"" + APP_ID + "\""
            buildConfigField "String", "APP_NAME", "\"" + APP_NAME + "\""
            buildConfigField "boolean", "API_DEBUG", "false"
            buildConfigField "String", "SERVICE_URL", SERVICE_URL_RELEASE
            buildConfigField "String", "RESOURCE_URL", RESOURCE_URL_RELEASE
            minifyEnabled false
            manifestPlaceholders = [APP_LABEL: APP_NAME]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig  signingConfigs.key
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }

    }
    lintOptions {
        abortOnError false
    }
}

def fileWriter(path, stringBuffer) {
    new File(path).withWriter('UTF-8') {
        within ->
            within.append(stringBuffer)
    }
}

task writeAppInfo << {
    def appInfo = "APP_ID:" + APP_ID + "\r\nVERSION_CODE:" + VERSION_CODE + "\r\nVERSION_NAME:" + VERSION_NAME + "\r\nVERSION_TEXT:" + VERSION_TEXT + "\r\nVERSION_KEY:" + VERSION_KEY + "\r\n";
    fileWriter(rootDir.getAbsolutePath() + '/build/version.txt', appInfo);
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.0.0-beta1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.0.0-beta1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.alibaba:fastjson:1.2.10'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.squareup.okio:okio:1.5.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'com.facebook.fresco:fresco:0.12.0'
    implementation 'com.jakewharton:butterknife:8.8.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.0'
    //二维码扫描
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'cn.bingoogolapple:bga-qrcodecore:1.1.9@aar'
    implementation 'cn.bingoogolapple:bga-zxing:1.1.9@aar'
    implementation 'com.android.support:cardview-v7:26.0.0-beta1'


    implementation 'cn.jiguang.sdk:jpush:3.1.1'  // 此处以JPush 3.1.1 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.1.9'  // 此处以JCore 1.1.9 版本为例。

}
